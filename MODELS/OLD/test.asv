function outputImage=test( handles, matrix,outputFrameRange)
%
% function test
%
% Another example of functions would be defined as:
%      input:   time-series at given slice [:,:,1,:]
%      output:  image (one frame is calculated)  [:,:]
% 
%
% input:
%
%   handles             - handles to imlook4d variables.  handles.model is describing model.  
%                           Populated by call with zero arguments
%   matrix              - matrix with data [x,y,z,frames]=[:,:,1,:]
%   outputFrameRange    - frames that function test will output.  
%                         For models generating static images from a time-series, frame is ignored.
%
% output:
%   outputImage   -  3D image time series [:,:,1,:] if outputFrameRange is a range
%                    or
%                    2D image [:,:,1,1] if outputFrameRange is a number
%
%
% Using the file test as an example, the files of an imlook4d model-plugin is 
% /MODELS/test.m                    function manipulating image (and calls
%                                   test_control when only test(handles) is called from imlook4d.
%                                   Test is the only function called directly
% /MODELS/test/test_control.m       Utility function used for setup of parameters
% /MODELS/test/test_control.fig     GUI for test_control
%
% Author: Jan Axelsson
% 2008-SEP-23


%
% function test
%
% input:
%
%   handles             - handles to imlook4d variables.  handles.model is describing model.  
%   matrix              - matrix with data [x,y,z,frames]=[:,:,1,:]
%   outputFrameRange    - frames that function will output.
%
% output:
%   outputImage         -  3D image time series [:,:,1,:] if outputFrameRange is a range
%                           or
%                          2D image [:,:,1,1] if outputFrameRange is a number 
%
%
% General information about model plug-in functions for imlook4d:
%   A model function should have ONE of the following capabilities:
%   - convert a time-series to another time-series [:,:,slice,:]=> [:,:,slice,:]
%   - convert a time-series to an image [:,:,slice,:]=> [:,:]
%   It is up to the definition of the model to return either of the above.  
%   (Imlook4d handles the display of both types of returned matrices)
%
%
% This function is an example of a function defined as:
%      input:   time-series at given slice [:,:,1,:]
%      output:  time-series (each frame is calculated)  [:,:,1,:]
% 
%
% A imlook4d plug-in model function follows the above described behavior,
% and the m-file is put into the FUNCTIONS folder.  A control function and
% GUI is also necessary.
%
% Using the plug-in function "test" as an example, the files of an imlook4d model-plugin is 
% /MODELS/test.m                    function manipulating image.
% /MODELS/test/test_control.m       Utility function used for setup of parameters
% /MODELS/test/test_control.fig     GUI for test_control
%
% Author: Jan Axelsson
% 2008-SEP-23


    %---------------------------------------------------
    % INITIALIZE
    %---------------------------------------------------
     %if (size(frameRange==1)) frameRange=1;end   % Make index to outputImage=1 if not a range => output is a 2D image

% 
%     %---------------------------------------------------
%     % Setup function should be called here
%     %---------------------------------------------------
%     if (nargin==1)
%         disp('no arguments to function test');
%         h=test_control(handles);
%         %h.ROIPopupmenu=get(handles.ROINumberMenu,'String'); % Cell array
%         outputImage=[];
% 
%         return;
%     end
    
    %---------------------------------------------------
    % Model function - work on one or multiple time series
    %---------------------------------------------------    
    %disp('test called');


    
    % Perform calculations
    for i=outputFrameRange  % Generate one image per frame in outputFrameRange
        %disp(i);
        modelImage(:,:,1,i)=matrix(:,:,1,i)/handles.model.test.TACT(i);
    end

    % Fix matrix dimensions depending if output is single image or
    % time-series.
    %
    % This may not be necessary if output can only be a single image 
    % (for instance PATLAK and other models)
    
    if (size(outputFrameRange(:))==1)
        % (If outputFrameRange is not a range, a single image should be returned)
        % Create 2D image
        outputImage=modelImage(:,:,1,outputFrameRange);
    else
        % (If outputFrameRange is a range)
        % Keep 4D image
        outputImage=modelImage;
    end

